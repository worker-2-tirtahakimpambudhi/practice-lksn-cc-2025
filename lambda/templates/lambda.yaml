AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  ###################################################################################
  ##                            Parameters For Lambda                              ##
  ###################################################################################
  DBHost:
    Type: String
    Description: RDS Host for application connect to database

  DBName:
    Type: String
    Description: RDS Database Name for application connect to database

  DBUser:
    Type: String
    Description: RDS Database User for application connect to database

  DBPassword:
    Type: String
    Description: RDS Database Password for application connect to database
    NoEcho: true

  DBTableName:
    Type: String

  LambdaLayerName:
    Type: String
    Default: lksn-restapi-layer
    Description: The name of the Lambda layer

  APIGatewayName:
    Type: String
    Default: REST-API-Todolist
    Description: The name of api gateway

  DeploymentStageName:
    Type: String
    Default: prod
    Description: The stage name of the Deployment
    AllowedValues:
      - prod
      - dev
      - test
      - staging

  LambdaS3Bucket:
    Type: String
    Default: lksncc-2025-s3-bucket
    Description: The name s3 bucket for source code lambda layer

  LambdaLayerS3Key:
    Type: String
    Default: layer.zip
    Description: The name s3 key for source code lambda layer

  LambdaRuntime:
    Type: String
    Default: nodejs22.x
    Description: The runtime of the Lambda function
    AllowedValues:
      - nodejs22.x
      - nodejs20.x
      - nodejs18.x

  LambdaFunctionMethodGETHandler:
    Type: String
    Default: getAll.handler
    Description: The name lambda handler for execute the function

  LambdaFunctionMethodPOSTHandler:
    Type: String
    Default: create.handler
    Description: The name lambda handler for execute the function

  LambdaFunctionMethodPUTHandler:
    Type: String
    Default: update.handler
    Description: The name lambda handler for execute the function

  LambdaFunctionMemory:
    Type: Number
    Default: 128
    Description: The memory size mb lambda function

  LambdaBaseFunctionName:
    Type: String
    Default: lksn-restapi
    Description: The name of the Lambda function

  LambdaArchitecture:
    Type: String
    Default: x86_64
    Description: The architecture of the Lambda function
    AllowedValues:
      - x86_64
      - arm64

  LambdaFunctionS3KeyMethodGET:
    Type: String
    Default: getAll.zip

  LambdaFunctionS3KeyMethodPOST:
    Type: String
    Default: create.zip

  LambdaFunctionS3KeyMethodPUT:
    Type: String
    Default: update.zip

  LambdaFunctionMethodGETByIDHandler:
    Type: String
    Default: getById.handler
    Description: The handler name for GET by ID Lambda

  LambdaFunctionMethodDELETEHandler:
    Type: String
    Default: delete.handler
    Description: The handler name for DELETE Lambda

  LambdaFunctionS3KeyMethodGETByID:
    Type: String
    Default: getById.zip

  LambdaFunctionS3KeyMethodDELETE:
    Type: String
    Default: delete.zip

  LambdaFunctionSecurityGroup:
    Type: String
    Description: The security group id for attach to lambda function

  LambdaFunctionSubnetOne:
    Type: String
    Description: The subnet one for attach to lambda function

  LambdaFunctionSubnetTwo:
    Type: String
    Description: The subnet two for attach to lambda function
  # LambdaFunctionRoleArn:
  #   Type: String
  #   Description: The iam role for lambda function

  #### TODO
  #### Attach to Lambda to VPC

Resources:
  ###################################################################################
  ##                            Resources For Lambda                               ##
  ###################################################################################

  LambdaLayer:
    Type: AWS::Lambda::LayerVersion
    Properties:
      LayerName: !Ref LambdaLayerName
      Description: The layer for the Lambda function
      Content:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaLayerS3Key
      CompatibleRuntimes:
        - !Ref LambdaRuntime
      LicenseInfo: MIT

  LambdaFunctionMethodGET:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub
        - ${LambdaBaseFunctionName}-method-get
        - LambdaBaseFunctionName: !Ref LambdaBaseFunctionName
      Handler: !Ref LambdaFunctionMethodGETHandler
      Role: arn:aws:iam::277789128961:role/iam-12345  # Fake replace to actual value
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaFunctionS3KeyMethodGET
      Runtime: !Ref LambdaRuntime
      MemorySize: !Ref LambdaFunctionMemory
      Architectures:
        - !Ref LambdaArchitecture
      Layers:
        - !Ref LambdaLayer
      Environment:
        Variables:
          DB_HOST: !Ref DBHost
          DB_USER: !Ref DBUser
          DB_NAME: !Ref DBName
          DB_PASSWORD: !Ref DBPassword
          DB_TABLE_NAME: !Ref DBTableName
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaFunctionSecurityGroup
        SubnetIds:
          - !Ref LambdaFunctionSubnetOne
          - !Ref LambdaFunctionSubnetTwo

  LambdaFunctionMethodPOST:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub
        - ${LambdaBaseFunctionName}-method-post
        - LambdaBaseFunctionName: !Ref LambdaBaseFunctionName
      Handler: !Ref LambdaFunctionMethodPOSTHandler
      Role: arn:aws:iam::277789128961:role/iam-12345  # Fake replace to actual value
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaFunctionS3KeyMethodPOST
      Runtime: !Ref LambdaRuntime
      MemorySize: !Ref LambdaFunctionMemory
      Architectures:
        - !Ref LambdaArchitecture
      Layers:
        - !Ref LambdaLayer
      Environment:
        Variables:
          DB_HOST: !Ref DBHost
          DB_USER: !Ref DBUser
          DB_NAME: !Ref DBName
          DB_PASSWORD: !Ref DBPassword
          DB_TABLE_NAME: !Ref DBTableName
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaFunctionSecurityGroup
        SubnetIds:
          - !Ref LambdaFunctionSubnetOne
          - !Ref LambdaFunctionSubnetTwo

  LambdaFunctionMethodPUT:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub
        - ${LambdaBaseFunctionName}-method-put
        - LambdaBaseFunctionName: !Ref LambdaBaseFunctionName
      Handler: !Ref LambdaFunctionMethodPUTHandler
      Role: arn:aws:iam::277789128961:role/iam-12345  # Fake replace to actual value
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaFunctionS3KeyMethodPUT
      Runtime: !Ref LambdaRuntime
      MemorySize: !Ref LambdaFunctionMemory
      Architectures:
        - !Ref LambdaArchitecture
      Layers:
        - !Ref LambdaLayer
      Environment:
        Variables:
          DB_HOST: !Ref DBHost
          DB_USER: !Ref DBUser
          DB_NAME: !Ref DBName
          DB_PASSWORD: !Ref DBPassword
          DB_TABLE_NAME: !Ref DBTableName
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaFunctionSecurityGroup
        SubnetIds:
          - !Ref LambdaFunctionSubnetOne
          - !Ref LambdaFunctionSubnetTwo

  LambdaFunctionMethodGETByID:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${LambdaBaseFunctionName}-method-getById
      Handler: !Ref LambdaFunctionMethodGETByIDHandler
      Role: arn:aws:iam::277789128961:role/iam-12345 
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaFunctionS3KeyMethodGETByID
      Runtime: !Ref LambdaRuntime
      MemorySize: !Ref LambdaFunctionMemory
      Architectures:
        - !Ref LambdaArchitecture
      Layers:
        - !Ref LambdaLayer
      Environment:
        Variables:
          DB_HOST: !Ref DBHost
          DB_USER: !Ref DBUser
          DB_NAME: !Ref DBName
          DB_PASSWORD: !Ref DBPassword
          DB_TABLE_NAME: !Ref DBTableName
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaFunctionSecurityGroup
        SubnetIds:
          - !Ref LambdaFunctionSubnetOne
          - !Ref LambdaFunctionSubnetTwo

  LambdaFunctionMethodDELETE:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub ${LambdaBaseFunctionName}-method-delete
      Handler: !Ref LambdaFunctionMethodDELETEHandler
      Role: arn:aws:iam::277789128961:role/iam-12345 
      Code:
        S3Bucket: !Ref LambdaS3Bucket
        S3Key: !Ref LambdaFunctionS3KeyMethodDELETE
      Runtime: !Ref LambdaRuntime
      MemorySize: !Ref LambdaFunctionMemory
      Architectures:
        - !Ref LambdaArchitecture
      Layers:
        - !Ref LambdaLayer
      Environment:
        Variables:
          DB_HOST: !Ref DBHost
          DB_USER: !Ref DBUser
          DB_NAME: !Ref DBName
          DB_PASSWORD: !Ref DBPassword
          DB_TABLE_NAME: !Ref DBTableName
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaFunctionSecurityGroup
        SubnetIds:
          - !Ref LambdaFunctionSubnetOne
          - !Ref LambdaFunctionSubnetTwo

  ###################################################################################
  ##                        Resources For API Gateway                              ##
  ###################################################################################

  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref APIGatewayName
      EndpointConfiguration:
        Types:
          - REGIONAL

  ApiGatewayTodoListResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: todolist

  ApiGatewayTodoListItemResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !Ref ApiGatewayTodoListResource
      PathPart: '{id}'

  ApiGatewayMethodGET:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref ApiGatewayTodoListResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations
          - LambdaFunctionArn: !GetAtt LambdaFunctionMethodGET.Arn

  ApiGatewayMethodPOST:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref ApiGatewayTodoListResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations
          - LambdaFunctionArn: !GetAtt LambdaFunctionMethodPOST.Arn

  ApiGatewayMethodGETByID:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref ApiGatewayTodoListItemResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations
          - LambdaFunctionArn: !GetAtt LambdaFunctionMethodGETByID.Arn

  ApiGatewayMethodPUT:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref ApiGatewayTodoListItemResource
      HttpMethod: PUT
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations
          - LambdaFunctionArn: !GetAtt LambdaFunctionMethodPUT.Arn

  ApiGatewayMethodDELETE:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref ApiGatewayTodoListItemResource
      HttpMethod: DELETE
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations
          - LambdaFunctionArn: !GetAtt LambdaFunctionMethodDELETE.Arn

  LambdaPermissionForApiGatewayGET:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunctionMethodGET
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/GET/todolist
        - RestApi: !Ref RestApi


  LambdaPermissionForApiGatewayPOST:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunctionMethodPOST
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/POST/todolist
        - RestApi: !Ref RestApi

  LambdaPermissionForApiGatewayGETById:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunctionMethodGETByID
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/GET/todolist/*
        - RestApi: !Ref RestApi

  LambdaPermissionForApiGatewayPUT:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunctionMethodPUT
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/PUT/todolist/*
        - RestApi: !Ref RestApi

  LambdaPermissionForApiGatewayDELETE:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref LambdaFunctionMethodDELETE
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApi}/*/DELETE/todolist/*
        - RestApi: !Ref RestApi

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - ApiGatewayMethodGET
      - ApiGatewayMethodPOST
      - ApiGatewayMethodPUT
      - ApiGatewayMethodGETByID
      - ApiGatewayMethodDELETE
    Properties:
      RestApiId: !Ref RestApi
      Description: Deployment for REST API

  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref RestApi
      DeploymentId: !Ref ApiGatewayDeployment
      StageName: !Ref DeploymentStageName

Outputs:
  APIGatewayURL:
    Description: URL of the API Gateway endpoint
    Value: !Sub
      - https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${DeploymentStageName}/
      - RestApi: !Ref RestApi
        DeployStageName: !Ref DeploymentStageName
  APIGatewayID:
    Description: ID of the API Gateway
    Value: !Ref RestApi
  LambdaFunctionMethodGETArn:
    Description: ARN of the GET method Lambda function
    Value: !GetAtt LambdaFunctionMethodGET.Arn
  LambdaFunctionMethodGETByIdArn:
    Description: ARN of the GET method Lambda function
    Value: !GetAtt LambdaFunctionMethodGETByID.Arn
  LambdaFunctionMethodPOSTArn:
    Description: ARN of the GET method Lambda function
    Value: !GetAtt LambdaFunctionMethodPOST.Arn
  LambdaFunctionMethodPUTArn:
    Description: ARN of the GET method Lambda function
    Value: !GetAtt LambdaFunctionMethodPUT.Arn
  LambdaFunctionMethodDELETEArn:
    Description: ARN of the GET method Lambda function
    Value: !GetAtt LambdaFunctionMethodDELETE.Arn
  LambdaLayerArn:
    Description: ARN of the Lambda Layer
    Value: !Ref LambdaLayer