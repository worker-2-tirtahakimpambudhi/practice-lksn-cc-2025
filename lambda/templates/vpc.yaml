AWSTemplateFormatVersion: 2010-09-09
Description: Create VPC with Public and Private Route Tables

Parameters:

  ###################################################################################
  ##                    Parameters For Networking (VPC)                            ##
  ###################################################################################

  VPCCidr:
    Type: String
    Default: 192.168.1.0/24
    Description: the cidr (classless inter domain route) blocks for vpc

  VPCName:
    Type: String
    Default: lksn-cc-2025-vpc 
    Description: the name for vpc 

  SubnetPrivateOneCidr:
    Type: String
    Description: the cidr for subnet private one must be valid format can calculate in https://cidr.xyz
    Default: 192.168.1.0/26

  SubnetPrivateTwoCidr:
    Type: String
    Description: the cidr for subnet private two must be valid format can calculate in https://cidr.xyz
    Default: 192.168.1.128/26

  SubnetPublicOneCidr:
    Type: String
    Description: the cidr for subnet public one must be valid format can calculate in https://cidr.xyz
    Default: 192.168.1.64/26

  SubnetPublicTwoCidr:
    Type: String
    Description: the cidr for subnet public two must be valid format can calculate in https://cidr.xyz
    Default: 192.168.1.192/26

Resources:
  
  ###################################################################################
  ##                    Resources For Networking (VPC)                             ##
  ###################################################################################

  # 1. Create VPC
  CreateVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Ref VPCName
          
  # 2. Create Internet Gateway
  CreateInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-igw"
  
  # 3. Attach Internet Gateway to VPC
  AttachInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref CreateVPC
      InternetGatewayId: !Ref CreateInternetGateway
    
  # 4. Create Public Route, Route Table and Subnet
  CreatePublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CreateVPC
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-public-rtb"
  
  CreatePublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref CreatePublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0 
      GatewayId: !Ref CreateInternetGateway

  CreatePublicSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CreateVPC
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Ref SubnetPublicOneCidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-public-subnet-1"
  
  CreatePublicSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CreateVPC
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Ref SubnetPublicTwoCidr
      MapPublicIpOnLaunch: true      
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-public-subnet-2"

  AssociationPublicRouteTableToSubnetOne:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref CreatePublicRouteTable
      SubnetId: !Ref CreatePublicSubnetOne

  AssociationPublicRouteTableToSubnetTwo:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref CreatePublicRouteTable
      SubnetId: !Ref CreatePublicSubnetTwo 
  
  # 5. Create Private Route, NAT Gateway, EIP, Route Table and Subnet
  CreateEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  CreateNATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref CreatePublicSubnetOne
      AllocationId: !GetAtt CreateEIP.AllocationId

  CreatePrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref CreateVPC
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-private-rtb"

  CreatePrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref CreatePrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref CreateNATGateway

  CreatePrivateSubnetOne:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CreateVPC
      AvailabilityZone: !Select [0, !GetAZs ]
      CidrBlock: !Ref SubnetPrivateOneCidr
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-private-subnet-1"
  
  CreatePrivateSubnetTwo:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref CreateVPC
      AvailabilityZone: !Select [1, !GetAZs ]
      CidrBlock: !Ref SubnetPrivateTwoCidr
      MapPublicIpOnLaunch: false      
      Tags:
        - Key: Name
          Value: !Sub "${VPCName}-private-subnet-2"

  AssociationPrivateRouteTableToSubnetOne:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref CreatePrivateRouteTable
      SubnetId: !Ref CreatePrivateSubnetOne

  AssociationPrivateRouteTableToSubnetTwo:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref CreatePrivateRouteTable
      SubnetId: !Ref CreatePrivateSubnetTwo 

  # 6. S3 Endpoint
  CreateS3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcEndpointType: 'Gateway'
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref CreateVPC
      RouteTableIds: 
        - !Ref CreatePublicRouteTable
        - !Ref CreatePrivateRouteTable

Outputs:
  
  ###################################################################################
  ##                      Outputs For Networking (VPC)                             ##
  ###################################################################################

  VPCId:
    Description: The ID of the VPC
    Value: !Ref CreateVPC
    
  PublicSubnetOne:
    Description: The ID of the public subnet in AZ1
    Value: !Ref CreatePublicSubnetOne
    
  PublicSubnetTwo:
    Description: The ID of the public subnet in AZ2
    Value: !Ref CreatePublicSubnetTwo
    
  PrivateSubnetOne:
    Description: The ID of the private subnet in AZ1
    Value: !Ref CreatePrivateSubnetOne
    
  PrivateSubnetTwo:
    Description: The ID of the private subnet in AZ2
    Value: !Ref CreatePrivateSubnetTwo